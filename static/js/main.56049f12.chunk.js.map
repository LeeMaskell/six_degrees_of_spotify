{"version":3,"sources":["app/components/NavBar.js","app/components/Header.js","resources/IMG-5993.jpg","resources/IMG-5997.jpg","resources/IMG-5998.jpg","resources/IMG-5994.jpg","resources/blondie.jpeg","app/components/SpotifyAPI.js","app/components/Home.js","app/components/Rules.js","app/components/About.js","app/components/StarterArtists.js","app/components/TargetArtists.js","resources/IMG-5995.jpg","resources/IMG-5991.jpg","resources/IMG-5992.jpg","resources/IMG-5999.jpg","app/components/PlayScreen.js","app/App.js","reportWebVitals.js","index.js"],"names":["Navbar","className","to","Header","spotify","icon","faSpotify","id","accessToken","Spotify","hasAccessToken","length","getAccessToken","accessTokenMatch","window","location","href","match","expiresInMatch","console","log","expiresIn","Number","setTimeout","history","pushState","accessUrl","parseUrlForToken","search","artist1","fetch","headers","Authorization","then","response","json","jsonResponse","tracks","items","map","track","name","artist","artists","album","uri","getRelatedArtists","artistId","relatedArtist","ref","image","images","url","Home","stepBackward","faStepBackward","questionCircle","faQuestionCircle","stepForward","faStepForward","src","marvin","alt","floyd","beck","miles","blondie","onClick","Rules","About","starterArtist","beckImg","marvinImg","pinkFloydImg","blondieImg","milesDavisImg","targetArtist","PlayScreen","useState","setArtist1","setRelatedArtist","idOfArtist","setIsLoading","res","setRelArtist","artist2","setArtist2","counter","setCounter","isLoading","artistChain","value","setSelectValue","relArtist","htmlFor","type","document","getElementById","startArtist","Math","floor","random","endArtist","style","display","for","disabled","onChange","e","related","find","a","target","push","selectedOptions","innerText","innerHTML","selected","item","App","path","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"oOAWeA,EAVA,WACX,OACI,sBAAKC,UAAU,SAAf,UACI,cAAC,IAAD,CAASC,GAAG,IAAID,UAAU,YAA1B,kBACA,cAAC,IAAD,CAASC,GAAG,SAASD,UAAU,YAA/B,mBACA,cAAC,IAAD,CAASC,GAAG,SAASD,UAAU,YAA/B,uB,gBCSGE,EAXA,WACX,IAAMC,EAAU,cAAC,IAAD,CAAiBC,KAAMC,MACvC,OACI,yBAAQL,UAAU,QAAlB,UACI,6BAAKG,IACL,iDAAmB,8CACnB,qBAAIG,GAAG,cAAP,cAAsB,oCAAaH,SCVhC,MAA0B,qCCA1B,MAA0B,qCCA1B,MAA0B,qCCA1B,MAA0B,qCCA1B,MAA0B,qC,QCErCI,EAAc,GAEZC,EAAU,CACZC,eADY,WAER,OAAOF,EAAYG,OAAS,GAEhCC,eAJY,WAKR,GAAIJ,EAAYG,OAAS,EACrB,OAAOH,EAGX,IAAMK,EAAmBC,OAAOC,SAASC,KAAKC,MAAM,wBAC9CC,EAAiBJ,OAAOC,SAASC,KAAKC,MAAM,sBAGlD,GAFAE,QAAQC,IAAIP,EAAkBK,GAC9BC,QAAQC,IAAI,oBACRP,GAAoBK,EAAgB,CACpCV,EAAcK,EAAiB,GAC/B,IAAMQ,EAAYC,OAAOJ,EAAe,IAIxC,OAFAJ,OAAOS,YAAW,kBAAMf,EAAc,KAAgB,IAAZa,GAC1CP,OAAOU,QAAQC,UAAU,eAAgB,KAAM,KACxCjB,EAEP,IAAMkB,EAAS,2DAzBV,mCAyBU,0EAxBP,oCAyBRZ,OAAOC,SAAWW,GAI1BC,iBA1BY,WA4BR,IAAMd,EAAmBC,OAAOC,SAASC,KAAKC,MAAM,wBAC9CC,EAAiBJ,OAAOC,SAASC,KAAKC,MAAM,sBAClD,GAAIJ,GAAoBK,EAAgB,CACpCV,EAAcK,EAAiB,GAC/B,IAAMQ,EAAYC,OAAOJ,EAAe,IAExCJ,OAAOS,YAAW,kBAAMf,EAAc,KAAgB,IAAZa,GAC1CP,OAAOU,QAAQC,UAAU,eAAgB,KAAM,OAGvDG,OAtCY,SAsCLC,GACH,IAAMrB,EAAcC,EAAQG,iBAC5B,OAAOkB,MAAM,kDAAD,OAAmDD,GAC3D,CACIE,QAAS,CACLC,cAAc,UAAD,OAAYxB,MAE9ByB,MAAK,SAAAC,GACJ,OAAOA,EAASC,UACjBF,MAAK,SAAAG,GACJ,OAAIA,EAAaC,OAGVD,EAAaC,OAAOC,MAAMC,KAAI,SAAAC,GAAK,MAAK,CAC3CjC,GAAIiC,EAAMjC,GACVkC,KAAMD,EAAMC,KACZC,OAAQF,EAAMG,QAAQ,GAAGF,KACzBG,MAAOJ,EAAMI,MAAMH,KACnBI,IAAKL,EAAMK,QAPJ,OAWvBC,kBA5DY,SA4DMC,GACd,IAAMvC,EAAcC,EAAQG,iBAC5B,OAAOkB,MAAM,sCAAD,OAAuCiB,EAAvC,oBACR,CACIhB,QAAS,CACLC,cAAc,UAAD,OAAYxB,MAE9ByB,MAAK,SAAAC,GACJ,OAAOA,EAASC,UACjBF,MAAK,SAAAG,GACJ,OAAOA,EAAaO,QAAQJ,KAAI,SAAAS,GAAa,MAAK,CAC9CP,KAAMO,EAAcP,KACpBQ,IAAKD,EAAczC,GACnB2C,MAAOF,EAAcG,OAAOxC,OAAS,EAAIqC,EAAcG,OAAO,GAAGC,IAAM,YAQ5E3C,IC9CA4C,EA3BF,WACT,IAAMC,EAAe,cAAC,IAAD,CAAiBjD,KAAMkD,MACtCC,EAAiB,cAAC,IAAD,CAAiBnD,KAAMoD,MACxCC,EAAc,cAAC,IAAD,CAAiBrD,KAAMsD,MAC3C,OACI,sBAAKpD,GAAG,OAAR,UACI,yBAASA,GAAG,SAAZ,SAAqB,qBAAKqD,IAAMC,EAASC,IAAI,kBAC7C,yBAASvD,GAAG,QAAZ,SAAoB,qBAAKqD,IAAMG,EAAQD,IAAI,iBAC3C,yBAASvD,GAAG,OAAZ,SAAmB,qBAAKqD,IAAMI,EAAOF,IAAI,WACzC,yBAASvD,GAAG,QAAZ,SAAoB,qBAAKqD,IAAMK,EAAQH,IAAI,kBAC3C,yBAASvD,GAAG,UAAZ,SAAsB,qBAAKqD,IAAMM,EAAUJ,IAAI,cAC/C,yBAASvD,GAAG,YAAZ,SACI,4BAAI+C,MAER,yBAAS/C,GAAG,WAAZ,SACI,4BAAIiD,MAER,yBAASjD,GAAG,eAAZ,SACI,4BAAImD,MAER,yBAASnD,GAAG,OAAZ,SACI,cAAC,IAAD,CAAML,GAAG,cAAcK,GAAG,aAAa4D,QAAS1D,EAAQG,eAAxD,4BCpBDwD,EAbD,WACV,OACI,qBAAK7D,GAAG,QAAR,SACI,qBAAIN,UAAU,YAAd,2ZAGO,uBAAS,uBAHhB,mICeGoE,EAlBD,WACV,OACI,qBAAK9D,GAAG,QAAR,SACI,qBAAIN,UAAU,YAAd,qcAKO,uBAAS,uBALhB,iEAOkE,uBAAS,uBAAS,uBAAS,uBAEzF,0H,OCwBDqE,EAFO,CAtBT,CACT7B,KAAM,OACNQ,IAAK,yBACLC,MAAOqB,GARQ,CACf9B,KAAM,cACNQ,IAAK,yBACLC,MAAOsB,GAOO,CACd/B,KAAM,aACNQ,IAAK,yBACLC,MAAOuB,GAEK,CACZhC,KAAM,UACNQ,IAAK,yBACLC,MAAOwB,GAEG,CACVjC,KAAM,cACNQ,IAAK,yBACLC,MAAOyB,ICFIC,EAFM,CArBF,CACfnC,KAAM,cACNQ,IAAK,yBACLC,MCRW,IAA0B,sCDUxB,CACbT,KAAM,YACNQ,IAAK,yBACLC,MEbW,IAA0B,sCFezB,CACZT,KAAM,WACNQ,IAAK,yBACLC,MGlBW,IAA0B,sCHoB5B,CACTT,KAAM,OACNQ,IAAK,yBACLC,MIvBW,IAA0B,uCCwG1B2B,EAlGI,WACf,MAA8BC,mBAAS,MAAvC,mBAAOjD,EAAP,KAAgBkD,EAAhB,KAiCMC,EAAmB,SAACC,GACtBC,GAAa,GACbzE,EAAQqC,kBAAkBmC,GAAYhD,MAAK,SAAAkD,GACvCC,EAAaD,GACbD,GAAa,OAIrB,EAA8BJ,mBAAS,MAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAA8BR,mBAAS,GAAvC,mBAAOS,EAAP,KAAgBC,EAAhB,KACA,EAAkCV,oBAAS,GAA3C,mBAAOW,EAAP,KAAkBP,EAAlB,KACA,EAAsCJ,mBAAS,IAA/C,mBAAOY,EAAP,KACA,GADA,KACgCZ,mBAAS,OAAzC,mBAAOa,EAAP,KAAcC,EAAd,KACA,EAAkCd,mBAAS,IAA3C,mBAAOe,EAAP,KAAkBT,EAAlB,KACA,OACI,qBAAK7E,GAAG,aAAR,SACI,qBAAKA,GAAG,SAAR,SACI,uBAAMN,UAAU,gBAAhB,UACI,uBAAOM,GAAG,QAAQuF,QAAQ,aAA1B,+DAAgG,uBAAS,uBACzG,wBAAQC,KAAK,SAASxF,GAAG,eAAe4D,QAlDlC,WAClBhD,QAAQC,IAAI4E,SAASC,eAAe,YACpC,IAAIC,EAAc5B,EAAc6B,KAAKC,MAAMD,KAAKE,SAAW/B,EAAc3D,SAEzEoE,EAAWmB,GACX,IAAII,EAAY1B,EAAauB,KAAKC,MAAMD,KAAKE,SAAWzB,EAAajE,SACrE2E,EAAWgB,GACXtB,EAAiBkB,EAAYjD,KAC7B+C,SAASC,eAAe,eAAeM,MAAMC,QAAU,QACvDR,SAASC,eAAe,SAASM,MAAMC,QAAU,QAyCrC,mBACA,uBAAMjG,GAAG,cAAT,UACI,uBAAOA,GAAG,iBAAiBkG,IAAI,SAA/B,yCAA2E,uBAC3E,yBAAQC,SAAUjB,EAAWlF,GAAG,gBAAgBkC,KAAK,SAASkD,MAAOA,EAAOgB,SAzCtE,SAACC,GACvBpB,EAAWD,EAAU,GACrB,IAAMsB,EAAUhB,EAAUiB,MAAK,SAAAC,GAAC,OAAIA,EAAE9D,KAAO2D,EAAEI,OAAOrB,SACtDK,SAASC,eAAe,UAAUrC,IAAMiD,EAAQ3D,MAChD8B,EAAiB4B,EAAEI,OAAOrB,OAC1BD,EAAYuB,KAAKL,EAAEI,OAAOE,gBAAgB,GAAGC,WAC7CnB,SAASC,eAAe,iBAAiBN,MAAQ,KACjDC,EAAe,MACfI,SAASC,eAAe,kBAAkBmB,UAAY,6BAClDP,EAAQtG,KAAO8E,EAAQpC,MACvB+C,SAASC,eAAe,qBAAqBmB,UAAY,2BAE7C,IAAZ7B,IAEAsB,EAAQtG,KAAO8E,EAAQpC,IAAM+C,SAASC,eAAe,qBAAqBmB,UAAY,0BAClFpB,SAASC,eAAe,qBAAqBmB,UAAY,wBA0BjD,UACI,wBAAQV,UAAQ,EAACW,UAAQ,EAAC1B,OAAK,EAA/B,sCAEIE,EAAUtD,KAAI,SAAA+E,GACV,OAAO,wBAAQ3B,MAAO2B,EAAKrE,IAApB,SAA0BqE,EAAK7E,gBAKtD,sBAAKlC,GAAG,WAAR,UACgB,MAAXsB,GACG,sBAAK5B,UAAU,SAAf,UACI,qBAAKM,GAAG,WAAWN,UAAU,eAAe2D,IAAK/B,EAAQqB,QACzD,mDAAsBrB,EAAQY,WAGtC,sBAAKlC,GAAG,sBAAR,UACI,6BAEQmF,EAAYnD,KAAI,SAAA+E,GACZ,OAAO,6BAAMA,SAIzB,qBAAK/G,GAAG,SAASqD,IAAI,KACrB,oBAAIrD,GAAG,yBAGC,MAAX8E,GACG,sBAAKpF,UAAU,SAAf,UACI,qBAAKA,UAAU,eAAe2D,IAAKyB,EAAQnC,QAC3C,qBAAI3C,GAAG,UAAP,4BAAiC8E,EAAQ5C,sB,OC1D1D8E,MAzBf,WACE,OACE,eAAC,IAAD,CAAQtH,UAAU,MAAlB,UACE,cAAC,IAAD,UACE,cAAC,EAAD,MAEF,cAAC,IAAD,UACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOuH,KAAK,SAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,SAAZ,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOC,OAAK,EAACD,KAAK,IAAlB,SACE,cAAC,EAAD,MAEF,cAAC,IAAD,CAAOA,KAAK,cAAZ,SACE,cAAC,EAAD,UCjBOE,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB3F,MAAK,YAAkD,IAA/C4F,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCFdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFpC,SAASC,eAAe,SAM1ByB,M","file":"static/js/main.56049f12.chunk.js","sourcesContent":["import { NavLink } from 'react-router-dom';\nconst Navbar = () => {\n    return (\n        <div className=\"navBar\">\n            <NavLink to='/' className=\"navButton\" >Home</NavLink> \n            <NavLink to='/rules' className=\"navButton\" >Rules</NavLink>\n            <NavLink to='/about' className=\"navButton\" >About</NavLink>\n        </div>\n    );\n}\n\nexport default Navbar;\n\n","import { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faSpotify } from '@fortawesome/free-brands-svg-icons';\n\n\nconst Header = () => {\n    const spotify = <FontAwesomeIcon icon={faSpotify} />;\n    return (\n        <header className=\"title\">\n            <h1>{spotify}</h1>\n            <h1>Six Degrees of <span>Spotify</span></h1>\n            <h1 id=\"mobileTitle\">6<sup>o</sup>{spotify}</h1>\n        </header>\n    );\n}\n\nexport default Header;\n\n\n","export default __webpack_public_path__ + \"static/media/IMG-5993.07aeac46.jpg\";","export default __webpack_public_path__ + \"static/media/IMG-5997.b96f0364.jpg\";","export default __webpack_public_path__ + \"static/media/IMG-5998.eebac1ae.jpg\";","export default __webpack_public_path__ + \"static/media/IMG-5994.f5213088.jpg\";","export default __webpack_public_path__ + \"static/media/blondie.98dfdf04.jpeg\";","const clientId = '5cad4d3bde5f483e94d38253735b91b1';\nconst redirectUri = 'http://localhost:3000/playScreen'; \nlet accessToken = '';\n\nconst Spotify = {\n    hasAccessToken() {\n        return accessToken.length > 0;\n    },\n    getAccessToken() {\n        if (accessToken.length > 0) {\n            return accessToken;\n        }\n        //check for an access token match\n        const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\n        const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\n        console.log(accessTokenMatch, expiresInMatch);\n        console.log('has access token');\n        if (accessTokenMatch && expiresInMatch) {\n            accessToken = accessTokenMatch[1];\n            const expiresIn = Number(expiresInMatch[1]);\n            //This is going to clear the parameters, allowing us to grab a new access token on expiry\n            window.setTimeout(() => accessToken = '', expiresIn * 1000);\n            window.history.pushState('Access Token', null, '/');\n            return accessToken;\n        } else {\n            const accessUrl = `https://accounts.spotify.com/authorize?client_id=${clientId}&response_type=token&scope=playlist-modify-public&redirect_uri=${redirectUri}`;\n            window.location = accessUrl;\n        }\n    },\n    \n    parseUrlForToken() {\n        //check for an access token match\n        const accessTokenMatch = window.location.href.match(/access_token=([^&]*)/);\n        const expiresInMatch = window.location.href.match(/expires_in=([^&]*)/);\n        if (accessTokenMatch && expiresInMatch) {\n            accessToken = accessTokenMatch[1];\n            const expiresIn = Number(expiresInMatch[1]);\n            //This is going to clear the parameters, allowing us to grab a new access token on expiry\n            window.setTimeout(() => accessToken = '', expiresIn * 1000);\n            window.history.pushState('Access Token', null, '/');\n        }\n    },\n    search(artist1) { // function that fetches api data from Spotify\n        const accessToken = Spotify.getAccessToken();\n        return fetch(`https://api.spotify.com/v1/search?type=track&q=${artist1}`, // returns a promise\n            {\n                headers: {\n                    Authorization: `Bearer ${accessToken}`\n                }\n            }).then(response => { \n                return response.json();\n            }).then(jsonResponse => { \n                if(!jsonResponse.tracks) {\n                    return [];\n                }\n                return jsonResponse.tracks.items.map(track => ({\n                    id: track.id,\n                    name: track.name,\n                    artist: track.artists[0].name,\n                    album: track.album.name,\n                    uri: track.uri\n                }));\n            });\n    },\n    getRelatedArtists(artistId) { // returns a promise\n        const accessToken = Spotify.getAccessToken();\n        return fetch(`https://api.spotify.com/v1/artists/${artistId}/related-artists`,\n            {\n                headers: {\n                    Authorization: `Bearer ${accessToken}`\n                }\n            }).then(response => { // first thing to be done with the promise\n                return response.json();\n            }).then(jsonResponse => { // second thing to be done with the promise\n                return jsonResponse.artists.map(relatedArtist => ({ // return the data in an object that resembles the starterArtists objects\n                    name: relatedArtist.name,\n                    ref: relatedArtist.id,\n                    image: relatedArtist.images.length > 0 ? relatedArtist.images[0].url : \"\" // fill empty string with default image\n                }));\n            });\n    },\n}\n\n\n\nexport default Spotify;\n\n","import marvin from '../../resources/IMG-5993.jpg';\nimport floyd from '../../resources/IMG-5997.jpg';\nimport beck from '../../resources/IMG-5998.jpg';\nimport miles from '../../resources/IMG-5994.jpg';\nimport blondie from '../../resources/blondie.jpeg';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faStepBackward } from '@fortawesome/free-solid-svg-icons';\nimport { faQuestionCircle } from '@fortawesome/free-solid-svg-icons';\nimport { faStepForward } from '@fortawesome/free-solid-svg-icons';\nimport { Link } from 'react-router-dom';\nimport Spotify from './SpotifyAPI';\n\nconst Home = () => {\n    const stepBackward = <FontAwesomeIcon icon={faStepBackward} />;\n    const questionCircle = <FontAwesomeIcon icon={faQuestionCircle} />;\n    const stepForward = <FontAwesomeIcon icon={faStepForward} />;\n    return (\n        <div id=\"main\">\n            <section id=\"marvin\"><img src={ marvin } alt=\"Marvin Gaye\"/></section>\n            <section id=\"floyd\"><img src={ floyd } alt=\"Pink Floyd\"/></section>\n            <section id=\"beck\"><img src={ beck } alt=\"Beck\"/></section>\n            <section id=\"miles\"><img src={ miles } alt=\"Miles Davis\"/></section>\n            <section id=\"blondie\"><img src={ blondie } alt=\"Blondie\"/></section>\n            <section id=\"trackback\">\n                <a>{stepBackward}</a>\n            </section>\n            <section id=\"question\">\n                <a>{questionCircle}</a>\n            </section>\n            <section id=\"trackforward\">\n                <a>{stepForward}</a>\n            </section>\n            <section id=\"play\">\n                <Link to='/playScreen' id=\"playbutton\" onClick={Spotify.getAccessToken}>Play Now</Link>\n            </section>\n        </div>\n    );\n}\n\nexport default Home;\n\n\n            ","const Rules = () => {\n    return ( \n        <div id=\"rules\">\n            <h2 className=\"rulesText\">The aim of the game is to navigate from a starting artist to a target artist using the associated 'related artist' \n            information provided by Spotify. Each time an artist is selected a new list of related artists is provided. You need to consider the which \n            of the related artists will change the alorithm and provide related artists that are more similar to the target artist than the starting \n            artist.<br></br><br></br>You have 6 attempts at selecting artists. The goal is to have the target artist appear in one of the related artist\n            lists.\n            </h2>\n        </div>\n     );\n}\n \nexport default Rules;","const About = () => {\n    return ( \n        <div id=\"about\">\n            <h2 className=\"rulesText\">\n                Six Degrees of Spotify was devised at a party when the person choosing the music couldn't think of a ceratin\n                artist and used the related artist information to find the song he had in mind. A discussion followed about \n                whether the algorithm is useful for finding new music or if it is essentially an 'echo chamber' of the first \n                artist selected. This lead to a competition where guests suggested a target artist that the 'dj' needed to get\n                to.<br></br><br></br>\n\n                It's not an easy game. The first attempt took 27 selections...<br></br><br></br><br></br><br></br>\n\n                <em>This game has been created for educational purposes. It is not publicly avaialble.</em>\n            </h2>\n        </div>\n     );\n}\n \nexport default About;","import marvinImg from \"../..//resources/IMG-5993.jpg\";\nimport beckImg from \"../..//resources/IMG-5998.jpg\";\nimport pinkFloydImg from \"../..//resources/IMG-5997.jpg\";\nimport blondieImg from \"../..//resources/blondie.jpeg\";\nimport milesDavisImg from \"../..//resources/IMG-5994.jpg\";\n\n// list of artists for reference\nconst marvinGaye = {\n    name: 'Marvin Gaye',\n    ref: \"3koiLjNrgRTNbOwViDipeA\",\n    image: marvinImg\n}\nconst beck = {\n    name: 'Beck',\n    ref: \"3vbKDsSS70ZX9D2OcvbZmS\",\n    image: beckImg\n}\nconst pinkFloyd = {\n    name: 'Pink Floyd',\n    ref: \"0k17h0D3J5VfsdmQ1iZtE9\",\n    image: pinkFloydImg\n}\nconst blondie = {\n    name: 'Blondie',\n    ref: \"4tpUmLEVLCGFr93o8hFFIB\",\n    image: blondieImg\n}\nconst miles = {\n    name: 'Miles Davis',\n    ref: \"0kbYTNQb4Pb1rPbbaF0pT4\",\n    image: milesDavisImg\n}\n\n\nconst starterArtist = [beck, marvinGaye, pinkFloyd, blondie, miles];\n\nexport default starterArtist;\n","import spiceGirlsImg from \"../..//resources/IMG-5995.jpg\";\nimport pjHarveyImg from \"../..//resources/IMG-5991.jpg\";\nimport duaLipaImg from \"../..//resources/IMG-5992.jpg\";\nimport abbaImg from \"../..//resources/IMG-5999.jpg\";\n\nconst spiceGirls = {\n    name: 'Spice Girls',\n    ref: \"0uq5PttqEjj3IH1bzwcrXF\",\n    image: spiceGirlsImg\n}\nconst pjHarvey = {\n    name: 'PJ Harvey',\n    ref: \"12VaqyEhgwDRuFfEqbnrpz\",\n    image: pjHarveyImg\n}\nconst duaLipa = {\n    name: 'Dua Lipa',\n    ref: \"6M2wZ9GZgrQXHCFfjv46we\",\n    image: duaLipaImg\n}\nconst abba = {\n    name: 'Abba',\n    ref: \"0LcJLqbBmaGUft1e9Mm8HV\",\n    image: abbaImg\n}\n\nconst targetArtist = [spiceGirls, pjHarvey, duaLipa, abba];\n\nexport default targetArtist;","export default __webpack_public_path__ + \"static/media/IMG-5995.0656109d.jpg\";","export default __webpack_public_path__ + \"static/media/IMG-5991.c9b89c7a.jpg\";","export default __webpack_public_path__ + \"static/media/IMG-5992.32150067.jpg\";","export default __webpack_public_path__ + \"static/media/IMG-5999.9a5242e3.jpg\";","import { useState } from 'react';\nimport { createStore } from 'redux';\nimport starterArtist from './StarterArtists';\nimport targetArtist from './TargetArtists';\nimport Spotify from './SpotifyAPI';\n\nconst PlayScreen = () => {\n    const [artist1, setArtist1] = useState(null);\n    \n    const handleStarter = () => {\n        console.log(document.getElementById(\"artist1\"));\n        let startArtist = starterArtist[Math.floor(Math.random() * starterArtist.length)];\n        // artistChain.push(startArtist.name); prints starting artist to artistChain list\n        setArtist1(startArtist); // randomly selected starter artist is saved as a variable that can be referenced along with properties of that artist\n        let endArtist = targetArtist[Math.floor(Math.random() * targetArtist.length)];\n        setArtist2(endArtist);\n        setRelatedArtist(startArtist.ref); // sets the random starter artist to current state. This sets dropdown to related artists of randomly selected starter artist\n        document.getElementById(\"firstChoice\").style.display = \"block\";\n        document.getElementById(\"label\").style.display = \"none\";\n    }\n\n    const onRelatedSelected = (e) => { // this function takes the selected artist (from dropdown), searches spotify for the related artists and then re-populates the dropdown with the new set of related artists\n        setCounter(counter + 1);\n        const related = relArtist.find(a => a.ref == e.target.value); // search relArtist array for the artist selecetd fom the dropdown and assign it to a variable.\n        document.getElementById(\"relImg\").src = related.image; // assign above variable.image (to reference the image) as the src attribute\n        setRelatedArtist(e.target.value);\n        artistChain.push(e.target.selectedOptions[0].innerText);// adds each successive related artist as a list element to be rendered\n        document.getElementById(\"listSelection\").value = null;\n        setSelectValue(null);\n        document.getElementById(\"relArtistLabel\").innerHTML = \"Select next related artist\";\n        if (related.id === artist2.ref) {\n            document.getElementById(\"completionMessage\").innerHTML = \"congratulations you win\";\n        }\n        if (counter === 5) {\n            // setIsLoading(true);\n            related.id === artist2.ref ? document.getElementById(\"completionMessage\").innerHTML = \"congratulations you win\" :\n                document.getElementById(\"completionMessage\").innerHTML = \"Unlucky, try again?\";\n        }\n    }\n\n    const setRelatedArtist = (idOfArtist) => {\n        setIsLoading(true); // state change that disables/greys out the dropdown once the selction is made to prevent spamming\n        Spotify.getRelatedArtists(idOfArtist).then(res => { // calls the Spotify function (from UseFetch component) and searches the API\n            setRelArtist(res); // changes the stae of the dropdown with the new set of related artists\n            setIsLoading(false); // enables/removes the greyed out dropdown and makes it selectable again\n        });\n    }\n    \n    const [artist2, setArtist2] = useState(null);\n    const [counter, setCounter] = useState(0);\n    const [isLoading, setIsLoading] = useState(false);\n    const [artistChain, setArtistChain] = useState([]);\n    const [value, setSelectValue] = useState(null);\n    const [relArtist, setRelArtist] = useState([]);\n    return (\n        <div id=\"playScreen\">\n            <div id=\"choice\">\n                <form className=\"artistDisplay\">\n                    <label id=\"label\" htmlFor=\"searchTerm\">Click to generate your starter and target artists</label><br></br><br></br>\n                    <button type=\"button\" id=\"searchButton\" onClick={handleStarter}>Start</button>\n                    <form id=\"firstChoice\">\n                        <label id=\"relArtistLabel\" for=\"select\">Select first related artist</label><br></br>\n                        <select disabled={isLoading} id=\"listSelection\" name=\"select\" value={value} onChange={onRelatedSelected}>\n                            <option disabled selected value> -- select an option -- </option>\n                            {\n                                relArtist.map(item => {\n                                    return <option value={item.ref}>{item.name}</option>\n                                })\n                            }\n                        </select>\n                    </form>\n                    <div id=\"playGrid\">\n                        {artist1 != null &&\n                            <div className=\"artist\">\n                                <img id=\"startImg\" className=\"imageDisplay\" src={artist1.image}></img>\n                                <h2>Starting Artist: {artist1.name}</h2>\n                            </div>\n                        }\n                        <div id=\"relArtistListRender\">\n                            <ul>\n                                {\n                                    artistChain.map(item => {\n                                        return <li >{item}</li>\n                                    })\n                                }\n                            </ul>\n                            <img id=\"relImg\" src=\"\"></img>\n                            <h2 id=\"completionMessage\"></h2>\n                        </div>\n\n                        {artist2 != null &&\n                            <div className=\"artist\">\n                                <img className=\"imageDisplay\" src={artist2.image}></img>\n                                <h2 id=\"h2White\">Target Artist: {artist2.name}</h2>\n                            </div>\n                        }\n                    </div>\n                </form>\n\n            </div>\n        </div>\n    );\n}\n\nexport default PlayScreen;","import '../App.css';\nimport Navbar from './components/NavBar.js'\nimport Header from './components/Header.js';\nimport Home from './components/Home.js';\nimport Rules from './components/Rules';\nimport About from './components/About.js';\nimport PlayScreen from './components/PlayScreen.js';\n\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\n\nfunction App() {\n  return (\n    <Router className=\"App\">\n      <Route>\n        <Navbar />\n      </Route>\n      <Route>\n        <Header />\n      </Route>\n      <Route path='/rules'>\n        <Rules />\n      </Route>\n      <Route path='/about'>\n        <About />\n      </Route>\n      <Route exact path='/'>\n        <Home />\n      </Route>\n      <Route path='/playScreen'>\n        <PlayScreen />\n      </Route>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './app/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}